syntax = "proto3";

option go_package = "github.com/code-cell/esive/grpc";

package grpc;

service Esive {
  rpc MoveUp(MoveReq) returns (MoveRes) {}
  rpc MoveDown(MoveReq) returns (MoveRes) {}
  rpc MoveLeft(MoveReq) returns (MoveRes) {}
  rpc MoveRight(MoveReq) returns (MoveRes) {}

  rpc Build(BuildReq) returns (BuildRes) {}
  rpc Inspect(InspectReq) returns (InspectRes) {}
  rpc VisibilityUpdates(VisibilityUpdatesReq) returns (stream VisibilityUpdatesRes) {}
  rpc ChatUpdates(ChatUpdatesReq) returns (stream ChatUpdatesRes) {}
  rpc Say(SayReq) returns (SayRes) {}
  rpc Join(JoinReq) returns (JoinRes) {}
}

message VisibilityUpdatesReq {}
message VisibilityUpdatesRes {
  enum Action {
    ADD = 0;
    REMOVE = 1;
  }

  Renderable renderable = 1;
  Action action = 2;
  int64 tick = 3;
}

message ChatUpdatesReq {}
message ChatUpdatesRes {
  ChatMessage message = 1;
}

message MoveReq {}
message MoveRes {}

message BuildReq {}
message BuildRes {
  Position position = 1;
}

message InspectReq {}
message InspectRes {}

message JoinReq {
  string name = 1;
}
message JoinRes {
  int64 player_id = 1;
  int32 tickMilliseconds = 2;
}
message SayReq {
  string text = 1;
}
message SayRes {}

message Renderable {
  int64 id = 1;
  Position position = 2;
  string char = 3;
  int32 color = 4;
}

message ChatMessage {
  string from = 1;
  string text = 2;
}

message Position {
  int64 x = 1;
  int64 y = 2;
}
